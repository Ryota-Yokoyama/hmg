version: 2.1
orbs:
  aws-ecr: circleci/aws-ecr@0.0.4
  aws-ecs: circleci/aws-ecs@0.0.10
jobs:
  test:
    docker:
      - image: circleci/ruby:2.6.3-node-browsers-legacy
        environment:
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
          TZ: Asia/Tokyo
      - image: mysql:5.7
        environment:
          MYSQL_USER: test
          MYSQL_PASSWORD: test
          MYSQL_DATABASE: hmg_test
          MYSQL_ALLOW_EMPTY_PASSWORD: true
    working_directory: ~/hmg
    steps:
      - checkout
      - restore_cache:
          key: v2-repo-{{ .Environment.CIRCLE_SHA1 }}
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "Gemfile.lock" }}
          - v2-dependencies-
      - run:
          name: install dependencies
          command: |
            bundle install --jobs=4 --retry=3 --path vendor/bundle
      - save_cache:
          paths:
          - ./vendor/bundle
          key: v2-dependencies-{{ checksum "Gemfile.lock" }}
      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s
      # Database setup
      - run: bundle exec rails db:create --trace
      - run: bundle exec rails db:schema:load --trace
      # ChromeDriver Update
      - run:
          name: Update ChromeDriver Version
          command: |
            CHROME_VERSION=$(google-chrome --version | sed -r 's/[^0-9]+([0-9]+\.[0-9]+\.[0-9]+).*/\1/g')
            CHROMEDRIVER_VERSION=$(curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION)
            bundle exec chromedriver-update $CHROMEDRIVER_VERSION      
      # run tests!
      - run:
          name: Run rspec
          command: |
            mkdir /tmp/test-results
            TEST_FILES="$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)"
            bundle exec rspec --format progress --color --format documentation
      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

workflows:
  version: 2.1
  build-and-deploy:
    jobs:
      - test
      - aws-ecr/build_and_push_image:
          name: 'build-rails-app'
          requires:
            - test
          account-url: '${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com'
          extra-build-args: '--build-arg RAILS_MASTER_KEY=${RAILS_MASTER_KEY}'
          repo: '${MY_APP_PREFIX_RAILS}'
          region: '${AWS_REGION}'
          tag: '${CIRCLE_SHA1}'
      - aws-ecr/build_and_push_image:
          name: 'build-nginx'
          requires:
            - test
          account-url: '${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com'
          dockerfile: 'containers/nginx/Dockerfile'
          path: 'containers/nginx/'
          repo: '${MY_APP_PREFIX_NGINX}'
          region: '${AWS_REGION}'
          tag: '${CIRCLE_SHA1}'
      - aws-ecs/deploy-service-update:
          requires:
            - build-rails-app
            - build-nginx
          family: 'hmg-service'
          cluster-name: 'hmg-cluster'
          container-image-name-updates: 'container=hmg-service,tag=${CIRCLE_SHA1}'         
